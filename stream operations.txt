
Intermediate operations:

	filter()  --> used to filter the data . Uses Predicate lambda
	map()   --> convert one type to other type. Uses Function lambda
	mapToInt() --> convert to int type
	mapToLong()  --> convert to long type
	mapToDouble() --> convert to double type
	limit(number)  --> limits to given number
	skip(number)   --> skip number elements
	sorted()   --> to sort the elements based on Comparable 
	sorted(Comparator)  --> sorted based on comparator object
	distinct()  --> removes duplicates
	
Terminal operations
	forEach()   --> uses Consumer lambda
	count()   --> returns long 
	sum() --> returns sum of the values
	collect()  --> collects based on the Collector
	max()  --> select highest element based on comparator (returns Optional object)
	min()   --> selects lowest element based on comparator (returns optional object)
	anyMatch()  --> returns boolean
	allMatch()   --> returns boolean
	
